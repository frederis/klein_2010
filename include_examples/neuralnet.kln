// Simple artificial neural network in Klein
// Author: Francisco Mota
// Date: October 21, 2010
//
// Implements a XOR gate.
// There are five nodes:
//    
//    ----------       ----------
//    | node 0 | - - - | node 2 | - - \
//    ---------- \   / ----------     ----------
//                 X                  | node 4 |
//    ---------- /   \ ----------     ----------
//    | node 1 | - - - | node 3 | - - /
//    ----------       ----------
//
//    input layer     hidden layer   output layer
//

#include "real.kln"

threshold(node : integer) : integer
    // threshold for each node.
    if node = 3 then
        real(3) / 2
    else
        real(1) / 2
    endif

weight(source : integer, dest : integer) : integer
    // weights of links between nodes
    if source = 0 or source = 1 then
        if dest = 2 or dest = 3 then
            real(1)
        else
            0
        endif
    else if source = 2 then
        if dest = 4 then
            real(1)
        else
            0
        endif
    else if source = 3 then
        if dest = 4 then
            real(-1)
        else
            0
        endif 
    else
        0
    endif endif endif

value(current : integer, source : integer, dest: integer) : integer
    if threshold(source) < current then
        weight(source, dest)
    else
        0
    endif

newCurrent(dest : integer,
           n0 : integer,
           n1 : integer,
           n2 : integer,
           n3 : integer,
           n4 : integer) : integer
    value(n0, 0, dest) +
    value(n1, 1, dest) +
    value(n2, 2, dest) +
    value(n3, 3, dest) +
    value(n4, 4, dest)

runNet(stepsLeft : integer,
       n0 : integer,
       n1 : integer,
       n2 : integer,
       n3 : integer,
       n4 : integer) : integer
   if stepsLeft = 0 then
       n4
   else
       runNet(stepsLeft - 1,
           newCurrent(0, n0, n1, n2, n3, n4),
           newCurrent(1, n0, n1, n2, n3, n4),
           newCurrent(2, n0, n1, n2, n3, n4),
           newCurrent(3, n0, n1, n2, n3, n4),
           newCurrent(4, n0, n1, n2, n3, n4)
       )
   endif

main(input0 : integer, input1 : integer) : integer
    runNet(2, input0, input1, 0, 0, 0)

